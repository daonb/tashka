# vi:syntax=mkd




google map urls
===============
http://mapki.com/wiki/Google_Map_Parameters


`http://maps.google.com/?q=Exeter+Airport&t=k`
        
        q=query
        t=type
                m=map, 
                k=satellite, 
                h=hybrid, 
                p=terrain. 

Choose What to Import
=====================

       [ 1 ] All 

                Client      : XYZ Client (00001) [Edit]
                Site        : XYZ Site (00001)   [Edit]
                Certificate : ETS0000100001      [Edit]

       [ 2 ] Site and Certificate Only

                Client      : XYZ Client (00001) [Choose]
                Site        : XYZ Site (00001)   [Edit]
                Certificate : ETS0000100001      [Edit]


       [ 3 ] Certificate Only

                Client      : XYZ Client (00001) [Choose]
                Site        : XYZ Site (00001)   [Choose]
                Certificate : ETS0000100001      [Edit]

on show:
        a) if source_site_code exists in target, try and apply [3]
        else
        b) if source client_code exists in target, try and apply [2]
        else
        apply [3]

after {edit]
        apply the above rules again





[Edit] launches UINAvigator on source dataset

[Choose] launches Navigator tree for selecting client or site














c# assembly versions
====================

http://geekswithblogs.net/clemmon/archive/2006/01/10/65473.aspx

If the AssemblyInformationalVersion attribute is applied to the base
executable, the ProductVersion property and its dependent properties will use
this value instead of the AssemblyVersion attribute value.

Microsoft states that this behaviour is by design.

 
singapore geography
-------------------

MALAYSIA

Tanjung Piai    Johor Bahru      Tanjung Belungkor

--------------------------------------------------

                SINGAPORE

                Sentosa Island

------------------------------------------------------


Karimun                 Batam                   Bintan

Tanjung Balai                                   Tanjung Pinang

INDONESIA


Tanjung=Cape
map: http://www.temasekmap.com/articles.htm

recreate data connection in server explorer:

mono 
----
porting:http://www.fluidscape.co.nz/?q=node/50
	Database: D:\etas\etas\bin\Debug\DB.ETS
	Server Type: Super/Classic
	Datasource: localhost
	User, Password

xsd.exe Passwords.xsd /d /namespace:NoX

vim yankring
=============
after paste, press <M-P>, <M-N> to cycle through yankring


vimdiff
========

dark blue  = added
light blue = filled (deleted)
red        = conflict

`]c`       = next change
`[c`       = previous hange
:diffput   = apply
:diffge    = apply

vim nerdcommenter
=================
,cc       : comment
,cu       : uncomment
,c<Space> : toggle
,cs       : comment 'sexily'
,cm       : comment multipart (e.g. `*/ */`

everyday git
=============

pull:
        git pull origin master

push:
        git commit -a
        git push

make a central repo:

	mkdir repo
	cd repo
	git init
	touch README
	git add README
	git commit -m 'added README'


if the repos is empty (no initial commit), get an error:

	warning: remote HEAD refers to nonexistent ref, unable to checkout


To set up a repository 'public.git' on a server you should clone an existing 
repository using the '--bare' option:

	git clone --bare existing public.git

A bare repository is one without a checked out working copy of the code. It
only contains the git database. As a general rule you should never push into a
repository that contains changes in the working copy. To ensure this doesn't
happen, we're making the server repository a bare repository - it has no
working copy.
[See ](http://www.bluishcoder.co.nz/2007/09/how-to-publish-git-repository.html)



checkout a local copy:

	git clone repo bob

make changes:

	cd bob
	touch a
	git add a
	git commit -m 'bob added a'
	git status

push changes to repo:

		git push ../repo master:master
	or

		git push origin master

pull changes from repo (aka cvs update):

		git pull ../repo master:master
	or
		git pull origin

show branches

	git branch

create branch

	git branch cleanup

m:erge branch with current
	git checkout master
	git merge cleanup

push from one branch to another:

	git push <branch to push from>:<branch to push to>


The kernel.org manpage for git pull core/docs/git push.html#URLS will rather
cryptically tell you that “The canonical format of a <refspec> parameter is
+?<src>:<dst>”. Most of the time this translates to <branch to push
from>:<branch to push to>. The branch to push from and the colon are optional.
If left out, git will push from the local branch to the remote branch of the
same name. If no refspec is used at all, git will push all “heads” (f.e.
branches) on the local to matching heads that exist on the remote.




git howto
---------

create a key pair:
        ssh-keygen -t rsa

install git:
        sudo aptitude install git-core

configure git global:
        git config --global user.email "gglynne@yahoo.com"
        git config --global user.name "gglynne"

create a local repository:
        git init
	git config status.showUntrackedFiles 'no'
        git add .bashrc
        git commit -m 'first commit'

publish repository:
        git remote add origin git@github.com:gglynne/tashka.git
        git push origin master

test:
        mkdir repo
        cd repo
        git init
        git pull git@github.com:gglynne/tashka.git
        git remote add origin git@github.com:gglynne/tashka.git

make changes:
        git add .vimrc
        git status
	git commit -a -m "etas@`date`" && git push origin master

get changes:
        git pull origin master

ssh & git: remote howto
=======================

try and open an ssh connection with github:

        $ ssh git@github.com
        Permission denied (publickey).

Although github disallows this, authentication is performed,
so we can test if our key settings are acceptable.

the ssh-agent is used to manage key/password combinations
for ssh sessions. 

start the agent:

        $ eval `ssh-agent` 
        Agent pid 4620

        $ ps ax | grep ssh-agent
             4620       1    4620       4620    ? 1000 10:11:54 /usr/bin/ssh-agent

this will populate the shell with the appropriate enviro vars for ssh-add and ssh.

show identity:

        $ ssh-add -l
        The agent has no identities.

assume (default identity:

        $ ssh-add   
        Enter passphrase for /home/ets/.ssh/id_rsa: 
        Identity added: /home/ets/.ssh/id_rsa (/home/ets/.ssh/id_rsa)

        $ ssh-add -l
        2048 44:cf:0a:84:53:38:da:af:d5:59:f7:04:84:18:03:f1 /home/ets/.ssh/id_rsa (RSA)


the default identity created by `ssh-gen -t rsa`:

        -rw------- 1 ets None 1.8K Feb 19 10:00 /home/ets/.ssh/id_rsa
        -rw-r--r-- 1 ets None  398 Feb 19 10:00 /home/ets/.ssh/id_rsa.pub

try to connect again via ssh:

        $ ssh git@github.com
        Permission denied (publickey).

we need to add this key at [https://github.com/account]

        $ cat ~/.ssh/id_rsa.pub

now connection via ssh works:

        $ ssh git@github.com
        PTY allocation request failed on channel 0
        Hi gglynne! You've successfully authenticated, but GitHub does not provide shell access.
                Connection to github.com closed.

publicï¿½clone urls begin with `git://..`:

        git://github.com/gglynne/tashka.git

private clone urls begin with `git@github..`

        git@github.com:gglynne/tashka.git



`git clone` works on public & private & creates a subdir `tashka`):

        $ git clone git://github.com/gglynne/tashka.git

`git pull` works on public & private & restores files to their original places!!!:

        $ git pull git://github.com/gglynne/tashka.git

to persist changes to github:

        $ git commit -a -m 'test at ets'
        Created commit cddb2af: test at ets
         1 files changed, 1 insertions(+), 0 deletions(-)

        $ git push origin master
        Counting objects: 5, done.
        Compressing objects: 100% (3/3), done.
        Writing objects: 100% (3/3), 379 bytes, done.
        Total 3 (delta 1), reused 0 (delta 0)
        To git@github.com:gglynne/tashka.git
           719cbd4..cddb2af  master -> master


